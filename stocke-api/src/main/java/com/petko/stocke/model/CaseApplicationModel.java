/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.petko.stocke.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the CaseApplication service. Represents a row in the &quot;stocke_CaseApplication&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.petko.stocke.model.impl.CaseApplicationModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.petko.stocke.model.impl.CaseApplicationImpl</code>.
 * </p>
 *
 * @author petko
 * @see CaseApplication
 * @generated
 */
@ProviderType
public interface CaseApplicationModel extends BaseModel<CaseApplication> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a case application model instance should use the {@link CaseApplication} interface instead.
	 */

	/**
	 * Returns the primary key of this case application.
	 *
	 * @return the primary key of this case application
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this case application.
	 *
	 * @param primaryKey the primary key of this case application
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this case application.
	 *
	 * @return the ID of this case application
	 */
	public long getId();

	/**
	 * Sets the ID of this case application.
	 *
	 * @param id the ID of this case application
	 */
	public void setId(long id);

	/**
	 * Returns the additional fields of this case application.
	 *
	 * @return the additional fields of this case application
	 */
	@AutoEscape
	public String getAdditionalFields();

	/**
	 * Sets the additional fields of this case application.
	 *
	 * @param AdditionalFields the additional fields of this case application
	 */
	public void setAdditionalFields(String AdditionalFields);

	/**
	 * Returns the status of this case application.
	 *
	 * @return the status of this case application
	 */
	@AutoEscape
	public String getStatus();

	/**
	 * Sets the status of this case application.
	 *
	 * @param Status the status of this case application
	 */
	public void setStatus(String Status);

	/**
	 * Returns the case model ID of this case application.
	 *
	 * @return the case model ID of this case application
	 */
	public Long getCaseModelId();

	/**
	 * Sets the case model ID of this case application.
	 *
	 * @param CaseModelId the case model ID of this case application
	 */
	public void setCaseModelId(Long CaseModelId);

	/**
	 * Returns the owner ID of this case application.
	 *
	 * @return the owner ID of this case application
	 */
	public long getOwnerId();

	/**
	 * Sets the owner ID of this case application.
	 *
	 * @param OwnerId the owner ID of this case application
	 */
	public void setOwnerId(long OwnerId);

	/**
	 * Returns the active of this case application.
	 *
	 * @return the active of this case application
	 */
	public boolean getActive();

	/**
	 * Returns <code>true</code> if this case application is active.
	 *
	 * @return <code>true</code> if this case application is active; <code>false</code> otherwise
	 */
	public boolean isActive();

	/**
	 * Sets whether this case application is active.
	 *
	 * @param Active the active of this case application
	 */
	public void setActive(boolean Active);

	/**
	 * Returns the archive of this case application.
	 *
	 * @return the archive of this case application
	 */
	public boolean getArchive();

	/**
	 * Returns <code>true</code> if this case application is archive.
	 *
	 * @return <code>true</code> if this case application is archive; <code>false</code> otherwise
	 */
	public boolean isArchive();

	/**
	 * Sets whether this case application is archive.
	 *
	 * @param Archive the archive of this case application
	 */
	public void setArchive(boolean Archive);

	/**
	 * Returns the hidden of this case application.
	 *
	 * @return the hidden of this case application
	 */
	public boolean getHidden();

	/**
	 * Returns <code>true</code> if this case application is hidden.
	 *
	 * @return <code>true</code> if this case application is hidden; <code>false</code> otherwise
	 */
	public boolean isHidden();

	/**
	 * Sets whether this case application is hidden.
	 *
	 * @param Hidden the hidden of this case application
	 */
	public void setHidden(boolean Hidden);

	/**
	 * Returns the type of this case application.
	 *
	 * @return the type of this case application
	 */
	public long getType();

	/**
	 * Sets the type of this case application.
	 *
	 * @param Type the type of this case application
	 */
	public void setType(long Type);

	/**
	 * Returns the start date of this case application.
	 *
	 * @return the start date of this case application
	 */
	public Date getStartDate();

	/**
	 * Sets the start date of this case application.
	 *
	 * @param StartDate the start date of this case application
	 */
	public void setStartDate(Date StartDate);

	/**
	 * Returns the end date of this case application.
	 *
	 * @return the end date of this case application
	 */
	public Date getEndDate();

	/**
	 * Sets the end date of this case application.
	 *
	 * @param EndDate the end date of this case application
	 */
	public void setEndDate(Date EndDate);

}