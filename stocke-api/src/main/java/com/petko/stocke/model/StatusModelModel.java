/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.petko.stocke.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the StatusModel service. Represents a row in the &quot;stocke_StatusModel&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.petko.stocke.model.impl.StatusModelModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.petko.stocke.model.impl.StatusModelImpl</code>.
 * </p>
 *
 * @author petko
 * @see StatusModel
 * @generated
 */
@ProviderType
public interface StatusModelModel extends BaseModel<StatusModel> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a status model model instance should use the {@link StatusModel} interface instead.
	 */

	/**
	 * Returns the primary key of this status model.
	 *
	 * @return the primary key of this status model
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this status model.
	 *
	 * @param primaryKey the primary key of this status model
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this status model.
	 *
	 * @return the ID of this status model
	 */
	public long getId();

	/**
	 * Sets the ID of this status model.
	 *
	 * @param id the ID of this status model
	 */
	public void setId(long id);

	/**
	 * Returns the case model ID of this status model.
	 *
	 * @return the case model ID of this status model
	 */
	public long getCaseModelId();

	/**
	 * Sets the case model ID of this status model.
	 *
	 * @param CaseModelId the case model ID of this status model
	 */
	public void setCaseModelId(long CaseModelId);

	/**
	 * Returns the status of this status model.
	 *
	 * @return the status of this status model
	 */
	@AutoEscape
	public String getStatus();

	/**
	 * Sets the status of this status model.
	 *
	 * @param Status the status of this status model
	 */
	public void setStatus(String Status);

	/**
	 * Returns the internal of this status model.
	 *
	 * @return the internal of this status model
	 */
	public boolean getInternal();

	/**
	 * Returns <code>true</code> if this status model is internal.
	 *
	 * @return <code>true</code> if this status model is internal; <code>false</code> otherwise
	 */
	public boolean isInternal();

	/**
	 * Sets whether this status model is internal.
	 *
	 * @param Internal the internal of this status model
	 */
	public void setInternal(boolean Internal);

	/**
	 * Returns the message of this status model.
	 *
	 * @return the message of this status model
	 */
	@AutoEscape
	public String getMessage();

	/**
	 * Sets the message of this status model.
	 *
	 * @param Message the message of this status model
	 */
	public void setMessage(String Message);

	/**
	 * Returns the notification of this status model.
	 *
	 * @return the notification of this status model
	 */
	public boolean getNotification();

	/**
	 * Returns <code>true</code> if this status model is notification.
	 *
	 * @return <code>true</code> if this status model is notification; <code>false</code> otherwise
	 */
	public boolean isNotification();

	/**
	 * Sets whether this status model is notification.
	 *
	 * @param Notification the notification of this status model
	 */
	public void setNotification(boolean Notification);

	/**
	 * Returns the notification count of this status model.
	 *
	 * @return the notification count of this status model
	 */
	public long getNotificationCount();

	/**
	 * Sets the notification count of this status model.
	 *
	 * @param NotificationCount the notification count of this status model
	 */
	public void setNotificationCount(long NotificationCount);

	/**
	 * Returns the notification type of this status model.
	 *
	 * @return the notification type of this status model
	 */
	public boolean getNotificationType();

	/**
	 * Returns <code>true</code> if this status model is notification type.
	 *
	 * @return <code>true</code> if this status model is notification type; <code>false</code> otherwise
	 */
	public boolean isNotificationType();

	/**
	 * Sets whether this status model is notification type.
	 *
	 * @param NotificationType the notification type of this status model
	 */
	public void setNotificationType(boolean NotificationType);

}